{
  "openapi": "3.0.2",
  "info": {
    "title": "ALTA API Documentation",
    "version": "1.0.0",
    "description": "ALTA Store API from Alterra Academy",
    "termsOfService": "https://alta.id",
    "contact": {
      "name": "Alta Ranger",
      "email": "alta@gmail.com",
      "url": "https://alta.id"
    },
    "license": {
      "name": "APACHE 2.0"
    }
  },
  "externalDocs": {
    "url": "https://alta.id",
    "description": "Full documentation about alta api"
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/iffakhry/alta-api/1.0.0"
    },
    {
      "description": "ALTA server",
      "url": "https://api.alta.id"
    },
    {
      "description": "IP ALTA server",
      "url": "http://30.180.88.201:8080"
    },
    {
      "description": "ALTA API server",
      "url": "https://{environment}.api.alta.id",
      "variables": {
        "environment": {
          "default": "dev",
          "enum": ["dev", "qa", "prod", "staging"]
        }
      }
    }
  ],
  "paths": {
    "/projects/{id}/tasks":{
      "get":{
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "project id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {}
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "description": "endpoint for login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/LoginRequest"
              },
              "example": {
                "email": "hello@alta.id",
                "password": "qwerty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccess"
                },
                "example": {
                  "message":"success login",
                  "data":{
                    "id":1,
                    "name":"fakhry",
                    "token":"jwt-token-sample"
                  }
                }
              }
            }
          },
          "400":{
            "description": "failed login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "example": {
                  "message":"failed login. wrong email or password"
                }
              }
            }
          },
          "500":{
            "description": "failed login internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralResponse"
                },
                "example": {
                  "message":"failed login. failed connect to db"
                }
              }
            }
          }
        }
      }
    },
    "/todolist": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": ["Todolist"],
        "summary": "Get all todo list",
        "description": "Get all active to do list by defauld",
        "parameters": [
          {
            "name": "include_done",
            "in": "query",
            "required": false,
            "description": "Is include done todo list",
            "schema": {
              "type": "boolean",
              "nullable": true,
              "default": false
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Filter todo list by name",
            "schema": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "maxLength": 100
            },
            "examples": {
              "java": {
                "value": "java"
              },
              "php": {
                "value": "php"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get all todolist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayTodolist"
                },
                "examples": {
                  "success": {
                    "description": "Example success get all todo list",
                    "value": [
                      {
                        "id": 1,
                        "name": "java",
                        "priority": 3,
                        "tags": ["java", "programming"]
                      },
                      {
                        "id": 2,
                        "name": "php",
                        "priority": 3,
                        "tags": ["php", "programming"]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Todolist"],
        "summary": "Post todo list",
        "description": "Crate new to do list",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateTodolist"
              },
              "examples": {
                "java": {
                  "description": "Example create todolist Java",
                  "value": {
                    "name": "Java",
                    "priority": 3,
                    "tags": ["Java", "Programming"]
                  }
                },
                "php": {
                  "description": "Example create todolist php",
                  "value": {
                    "name": "php",
                    "priority": 3,
                    "tags": ["php", "Programming"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todolist"
                },
                "examples": {
                  "java": {
                    "description": "Success create todolist Java",
                    "value": {
                      "name": "Java",
                      "priority": 3,
                      "tags": ["Java", "Programming"]
                    }
                  },
                  "php": {
                    "description": "Success create todolist php",
                    "value": {
                      "name": "php",
                      "priority": 3,
                      "tags": ["php", "Programming"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todolist/{todolistId}": {
      "delete": {
        "tags": ["Todolist"],
        "summary": "Delete existing todo list",
        "description": "Delete existing todo list by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/TodolistId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete todo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "Success delete todolist",
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed delete not found todolist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "failed": {
                    "description": "Failed delete todolist",
                    "value": {
                      "success": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Todolist"],
        "summary": "Update existing todo list",
        "description": "Delete existing todo list by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/TodolistId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateTodolist"
              },
              "examples": {
                "java": {
                  "description": "Example create todolist Java",
                  "value": {
                    "name": "Java",
                    "priority": 3,
                    "tags": ["Java", "Programming"]
                  }
                },
                "php": {
                  "description": "Example create todolist php",
                  "value": {
                    "name": "php",
                    "priority": 3,
                    "tags": ["php", "Programming"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todolist"
                },
                "examples": {
                  "java": {
                    "description": "Success create todolist Java",
                    "value": {
                      "name": "Java",
                      "priority": 3,
                      "tags": ["Java", "Programming"]
                    }
                  },
                  "php": {
                    "description": "Success create todolist php",
                    "value": {
                      "name": "php",
                      "priority": 3,
                      "tags": ["php", "Programming"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "JWTAuth": {
        "description": "token for user",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "TodolistAuth": {
        "description": "Authentication for Todolist RESTful API",
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "parameters": {
      "TodolistId": {
        "name": "todolistId",
        "in": "path",
        "required": true,
        "description": "Todolist id for update",
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 10
        },
        "examples": {
          "java": {
            "description": "sample todo list id for java",
            "value": 1
          },
          "php": {
            "description": "sample todo list id for php",
            "value": 2
          }
        }
      }
    },
    "requestBodies":{
      "LoginRequest":{
        "type": "object",
        "properties":{
          "email":{
            "type" :"string"
          },
          "password":{
            "type":"string"
          }
        }
      }
    },
    "schemas": {
      "GeneralResponse":{
        "type": "object",
        "properties": {
          "message":{
            "type": "string"
          }
        }
      },
      "LoginSuccess":{
        "type": "object",
        "properties": {
          "message":{
            "type": "string"
          },
          "data":{
            "type": "object",
            "properties": {
               "id":{
                "type": "number"
               },
               "name":{
                "type": "string"
               },
               "token":{
                "type": "string"
               }
            }
          }
        }
      },
      "Todolist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "number",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ArrayTodolist": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Todolist"
        }
      },
      "CreateOrUpdateTodolist": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "number",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
